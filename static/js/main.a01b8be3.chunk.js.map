{"version":3,"sources":["utils/api.js","context/AuthContext.js","serviceWorker.js","GlobalStyle.js","views/App.jsx","hooks/useForm.js","utils/validate.js","components/Button.jsx","components/Checkbox.jsx","components/Field.jsx","components/Fieldset.jsx","components/Header.jsx","components/Input.jsx","components/Notification.jsx","views/Login.jsx","views/UserPanel.jsx","index.js"],"names":["loginRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","email","password","wrap","_context","prev","next","Promise","resolve","setTimeout","then","Error","abrupt","sent","stop","_x","_x2","apply","this","arguments","removeToken","localStorage","removeItem","sessionStorage","initialState","loading","token","initialContext","objectSpread","login","logout","AuthContext","React","createContext","AuthProvider","state","keepLoggedIn","_this","authorize","setState","_callee2","values","loginToken","_context2","setItem","t0","console","error","getItem","props","history","replace","react_default","createElement","Provider","value","children","Component","withRouter","Boolean","window","location","hostname","match","createGlobalStyle","_templateObject","theme","textRegular","AppContainer","styled","div","App_templateObject","App","isEmpty","obj","keys","length","useForm","initialValues","callback","validate","_useState","useState","_useState2","slicedToArray","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setIsSubmitting","_useState7","_useState8","isSubmitted","setIsSubmitted","useEffect","handleChange","event","persist","defineProperty","target","name","type","checked","handleSubmit","preventDefault","finishSubmitting","passwordRegexp","isFormValid","validator","isEmail","test","StyledButton","button","Button_templateObject","disabled","primary","white","Button","text","onClick","CheckboxContainer","Checkbox_templateObject","Icon","svg","_templateObject2","HiddenCheckbox","input","attrs","_templateObject3","StyledCheckbox","_templateObject4","border","Checkbox","objectWithoutProperties","assign","viewBox","points","FieldContainer","Field_templateObject","height","Field","FieldsetContainer","Fieldset_templateObject","Fieldset","HeaderText","h1","Header_templateObject","textPrimary","Header","InputContainer","Input_templateObject","Label","label","Input_templateObject2","StyledInput","Input_templateObject3","danger","textPlaceholder","ErrorMessage","p","Input_templateObject4","Input","NotificationContainer","Notification_templateObject","Notification","Login","_useForm","_submitForm","_useContext","useContext","react_router","to","components_Header","onSubmit","noValidate","components_Fieldset","components_Notification","components_Field","components_Input","placeholder","required","onChange","autoCorrect","autoCapitalize","components_Checkbox","style","marginLeft","fontSize","components_Button","UserPanel","ReactDOM","render","react_router_dom","styled_components_browser_esm","background","black","views_App","exact","path","component","GlobalStyle","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a01b8be3.chunk.js","sourcesContent":["const loginRequest = async (email, password) => {\n  return await new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 1000);\n  }).then(() => {\n    if (email === \"test@test.pl\" && password === \"Password1\") {\n      return \"gdIpPw628dh2\"; // mocked token\n    } else {\n      throw Error(\"Invalid email or password\");\n    }\n  });\n};\n\nexport default loginRequest;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport loginRequest from \"utils/api\";\n\nconst getToken = () =>\n  localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n\nconst removeToken = () => {\n  localStorage.removeItem(\"token\");\n  sessionStorage.removeItem(\"token\");\n};\n\nconst initialState = {\n  loading: true,\n  token: \"\"\n};\n\nconst initialContext = {\n  ...initialState,\n  login: () => {},\n  logout: () => {}\n};\n\nconst AuthContext = React.createContext(initialContext);\n\nclass AuthProvider extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    const token = getToken();\n\n    if (token) {\n      this.setState({ loading: false, token });\n    } else {\n      this.props.history.replace(\"/\");\n      this.setState({ loading: false });\n    }\n  }\n\n  login = async ({ email, password, keepLoggedIn }) => {\n    const token = await this.authorize({ email, password }, keepLoggedIn);\n    this.setState({ token });\n    return token;\n  };\n\n  logout = () => {\n    removeToken();\n    this.setState({ token: \"\" });\n  };\n\n  authorize = async (values, keepLoggedIn) => {\n    try {\n      let loginToken = await loginRequest(values.email, values.password);\n      const storage = keepLoggedIn ? localStorage : sessionStorage;\n      storage.setItem(\"token\", loginToken);\n\n      return loginToken;\n    } catch (ex) {\n      console.error(ex);\n      removeToken();\n      return \"\";\n    }\n  };\n  render() {\n    return (\n      <AuthContext.Provider\n        value={{\n          ...this.state,\n          login: this.login,\n          logout: this.logout\n        }}\n      >\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport const Provider = withRouter(AuthProvider);\nexport default AuthContext;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Lato', sans-serif;\n    color: ${props => props.theme.textRegular};\n  }\n  \n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst App = ({ children }) => {\n  return <AppContainer>{children}</AppContainer>;\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nconst isEmpty = obj => Object.keys(obj).length === 0;\n\nconst useForm = (initialValues, callback, validate) => {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (isEmpty(errors) && isSubmitting) {\n      callback();\n    }\n  }, [callback, errors, isSubmitting]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    const errors = validate(values);\n    setErrors(errors);\n    if (isEmpty(errors)) setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({\n      ...values,\n      [event.target.name]:\n        event.target.type === \"checkbox\"\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  const finishSubmitting = () => {\n    setIsSubmitting(false);\n    setIsSubmitted(true);\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    finishSubmitting,\n    isSubmitting,\n    values,\n    errors,\n    isSubmitted\n  };\n};\n\nexport default useForm;\n","import validator from \"validator\";\n\n// const emailRegexp = /\\S+@\\S+\\.\\S+/;\nconst passwordRegexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n\nconst isFormValid = ({ email, password }) => {\n  const errors = {};\n\n  if (!validator.isEmail(email)) {\n    errors.email = \"Invalid email\";\n  }\n\n  if (!password || !passwordRegexp.test(password)) {\n    errors.password = \"Invalid password\";\n  }\n\n  return errors;\n};\n\nexport default isFormValid;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  opacity: ${props => (props.disabled ? \"0.4\" : \"1\")};\n  background: ${props => props.theme.primary};\n  border-radius: 4px;\n  border: 1px solid ${props => props.theme.primary};\n  color: ${props => props.theme.white};\n  padding: 12px 24px;\n  width: 300px;\n  transition: 0.5s all ease-out;\n  margin-top: 16px;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.9;\n  }\n`;\n\nconst Button = ({ text, disabled, type, onClick }) => (\n  <StyledButton disabled={disabled} type={type} onClick={onClick}>\n    {text}\n  </StyledButton>\n);\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: ${props => props.theme.white};\n  stroke-width: 2px;\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => (props.checked ? props.theme.primary : \"transparent\")}\n  border: 2px solid ${props =>\n    props.checked ? props.theme.primary : props.theme.border}\n  border-radius: 3px;\n  transition: all 150ms;\n\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? \"visible\" : \"hidden\")}\n  }\n`;\n\nconst Checkbox = ({ checked, ...props }) => {\n  return (\n    <CheckboxContainer>\n      <HiddenCheckbox checked={checked} {...props} />\n      <StyledCheckbox checked={checked}>\n        <Icon viewBox=\"0 0 24 24\">\n          <polyline points=\"20 6 9 17 4 12\" />\n        </Icon>\n      </StyledCheckbox>\n    </CheckboxContainer>\n  );\n};\nexport default Checkbox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  height: ${props => props.height};\n`;\n\nconst Field = ({ height, children }) => (\n  <FieldContainer height={height}>{children}</FieldContainer>\n);\n\nexport default Field;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FieldsetContainer = styled.div`\n  display: flex;\n  align-items: left;\n  flex-direction: column;\n  border: 1px solid ${props => props.theme.border};\n  background: ${props => props.theme.white};\n  box-sizing: border-box;\n  padding: 2rem;\n  box-shadow: 0px 0px 1px rgba(10, 31, 68, 0.06),\n    0px 3px 3px rgba(10, 31, 68, 0.1);\n  border-radius: 8px;\n`;\n\nconst Fieldset = ({ children }) => (\n  <FieldsetContainer>{children}</FieldsetContainer>\n);\n\nexport default Fieldset;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderText = styled.h1`\n  font-size: 28px;\n  color: ${props => props.theme.textPrimary};\n  text-align: center;\n  font-weight: 700;\n  padding-bottom: 24px;\n`;\n\nconst Header = ({ text }) => <HeaderText>{text}</HeaderText>;\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  color: ${props => props.theme.textRegular};\n  font-size: 12px;\n  font-weight: bold;\n  padding: 0 0 4px 4px;\n`;\n\nconst StyledInput = styled.input`\n  background: ${props => props.theme.white};\n  border: 1px solid\n    ${props => (props.error ? props.theme.danger : props.theme.border)};\n  box-sizing: border-box;\n  border-radius: 4px;\n  padding: 10px;\n\n  &:active,\n  &:focus {\n    text-align: left;\n    border: 1px solid ${props => props.theme.primary};\n    box-sizing: border-box;\n  }\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: ${props => props.theme.textPlaceholder};\n  }\n  :-ms-input-placeholder {\n    color: ${props => props.theme.textPlaceholder};\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-transition: \"color 9999s ease-out, background-color 9999s ease-out\";\n    -webkit-transition-delay: 9999s;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  color: ${props => props.theme.danger};\n  margin: 0;\n  font-size: 12px;\n  padding-top: 4px;\n`;\n\nconst Input = ({ label, error, ...props }) => (\n  <InputContainer>\n    <Label>{label}</Label>\n    <StyledInput error={error} {...props} />\n    {error && <ErrorMessage>{error}</ErrorMessage>}\n  </InputContainer>\n);\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NotificationContainer = styled.div`\n  background: ${props => props.theme.danger};\n  color: ${props => props.theme.white};\n  font-size: 14px;\n  line-height: 24px;\n  padding: 10px 15px;\n  margin: 0;\n  margin-bottom: 10px;\n  border-radius: 4px;\n`;\n\nconst Notification = ({ children }) => (\n  <NotificationContainer>{children}</NotificationContainer>\n);\n\nexport default Notification;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport useForm from \"hooks/useForm.js\";\nimport isFormValid from \"utils/validate.js\";\nimport { AuthContext } from \"context\";\n\nimport {\n  Checkbox,\n  Field,\n  Fieldset,\n  Header,\n  Input,\n  Notification,\n  Button\n} from \"components\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  keepLoggedIn: false\n};\nconst Login = () => {\n  const {\n    handleChange,\n    handleSubmit,\n    finishSubmitting,\n    isSubmitting,\n    values,\n    errors,\n    isSubmitted\n  } = useForm(initialValues, submitForm, isFormValid);\n\n  async function submitForm() {\n    const token = await login(values);\n    if (!token) finishSubmitting();\n  }\n\n  const { loading, token, login } = useContext(AuthContext);\n\n  if (loading) return <div>Loading...</div>;\n  if (token) return <Redirect to=\"/userPanel\" />;\n  return (\n    <div>\n      <Header text=\"Sign in to the dashboard\" />\n      <form onSubmit={handleSubmit} noValidate>\n        <Fieldset>\n          {isSubmitted && !token && (\n            <Notification>Invalid email or password</Notification>\n          )}\n          <Field height=\"90px\">\n            <Input\n              type=\"email\"\n              placeholder=\"name@company.com\"\n              name=\"email\"\n              required\n              value={values.email}\n              onChange={handleChange}\n              error={errors.email}\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              label=\"Email\"\n            />\n          </Field>\n          <Field height=\"90px\">\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              required\n              onChange={handleChange}\n              value={values.password}\n              error={errors.password}\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              label=\"Password\"\n            />\n          </Field>\n          <Field height=\"30px\">\n            <label>\n              <Checkbox\n                name=\"keepLoggedIn\"\n                onChange={handleChange}\n                checked={values.keepLoggedIn}\n                label=\"Remember Me\"\n              />\n              <span style={{ marginLeft: \"8px\", fontSize: \"12px\" }}>\n                Remember Me\n              </span>\n            </label>\n          </Field>\n          <Button type=\"submit\" disabled={isSubmitting} text=\"Sign in\" />\n        </Fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"context\";\nimport { Redirect } from \"react-router-dom\";\nimport { Header, Button } from \"components\";\n\nconst UserPanel = () => {\n  const { logout, loading, token } = useContext(AuthContext);\n  if (loading) return <div>Loading...</div>;\n  if (!token) return <Redirect to=\"/\" />;\n  return (\n    <div>\n      <Header text=\"Login Successful\" />\n      <Button text=\"Logout\" onClick={logout} />\n    </div>\n  );\n};\n\nexport default UserPanel;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider as AuthProvider } from \"./context/AuthContext\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalStyle from \"./GlobalStyle\";\nimport App from \"./views/App\";\nimport Login from \"./views/Login\";\nimport UserPanel from \"./views/UserPanel\";\n\nconst theme = {\n  background: \"#f9f9fc\",\n  black: \"#252529\",\n  white: \"#ffffff\",\n  primary: \"#477bff\",\n  textPrimary: \"#0a1f44\",\n  textRegular: \" #4e5d78\",\n  textPlaceholder: \"#8a94a6\",\n  border: \"#e1e4e8\",\n  danger: \"#ff695b\"\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <App>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/userPanel\" component={UserPanel} />\n          </Switch>\n          <GlobalStyle />\n        </App>\n      </ThemeProvider>\n    </AuthProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}